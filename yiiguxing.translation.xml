<application>
  <component name="AppStorage">
    <option name="newTranslationDialogX" value="-1492" />
    <option name="newTranslationDialogY" value="129" />
    <histories>
      <item value="Called when the value returned from {@link getPlayWhenReady()} changes." />
      <item value="This prevents the screen from getting dimlock" />
      <item value="The player is able to immediately play from its current position. The player will be playing if {@link getPlayWhenReady()} is true, and paused otherwise." />
      <item value="The player does not have any media to play" />
      <item value="Playback has been paused because of a loss of audio focus" />
      <item value="Playback has been started or paused by a call to {@link setPlayWhenReady(boolean)}" />
      <item value="Playback" />
      <item value="Whether the source is currently being loaded." />
      <item value="&gt;{@link onEvents(Player, Events)} will also be called to report this event along with other events that happen in the same {@link Looper} message queue iteration." />
      <item value="Called when the player starts or stops loading the source." />
      <item value="reason" />
      <item value="This Runnable is used to animate an image so it fills the crop bounds entirely." />
      <item value="This method extracts {@link com.yalantis.ucrop.UCrop.Options optionsBundle} from incoming intent and setups Activity, {@link OverlayView} and {@link CropImageView} properly." />
      <item value="Checks if {@link mNetworkBlockSeq} is {@link INVALID_PROC_STATE_SEQ} and if so, returns immediately. Otherwise, makes a blocking call to ActivityManagerService to wait for the network rules to get updated." />
      <item value="zoom In Image" />
      <item value="Be careful: this method recreate UCropImageView instance and reattach it to layout." />
      <item value="Method for reset state for UCropImageView such as rotation, scale, translation." />
      <item value="Nullable" />
      <item value="should Delay Child Pressed State" />
      <item value="orientation" />
      <item value="smallest" />
      <item value="batch" />
      <item value="Return the {@link ClipData} associated with this Intent. If there is none, returns null. See {@link setClipData} for more information." />
      <item value="that satisfies the version constraints:" />
      <item value="modified" />
      <item value="The date and time when the original image data was generated. For a DSC the date and time the picture was taken are recorded. The format is &quot;YYYY:MM:DD HH:MM:SS&quot; with time shown in 24-hour format, and the date and time separated by one blank character ({@code 0x20}). When the date and time are unknown, all the character spaces except colons (&quot;:&quot;) should be filled with blank characters, or else the Interoperability field should be filled with blank characters. When the field is left blank, it is treated as unknown" />
      <item value="The date and time of image creation. In this standard it is the date and time the file was changed. The format is &quot;YYYY:MM:DD HH:MM:SS&quot; with time shown in 24-hour format, and the date and time separated by one blank character ({@code 0x20}). When the date and time are unknown, all the character spaces except colons (&quot;:&quot;) should be filled with blank characters, or else the Interoperability field should be filled with blank characters. The character string length is 20 Bytes including NULL for termination. When the field is left blank, it is treated as unknown" />
      <item value="&lt;p&gt;Set the number of pages that should be retained to either side of the currently visible page(s). Pages beyond this limit will be recreated from the adapter when needed. Set this to {@link OFFSCREEN_PAGE_LIMIT_DEFAULT} to use RecyclerView's caching strategy. The given value must either be larger than 0, or {@code OFFSCREEN_PAGE_LIMIT_DEFAULT}.&lt;p&gt; &lt;p&gt;Pages within {@code limit} pages away from the current page are created and added to the view hierarchy, even though they are not visible on the screen. Pages outside this limit will be removed from the view hierarchy, but the {@code ViewHolder}s will be recycled as usual by {@link RecyclerView}.&lt;p&gt; &lt;p&gt;This is offered as an optimization. If you know in advance the number of pages you will need to support or have lazy-loading mechanisms in place on your pages, tweaking this setting can have benefits in perceived smoothness of paging animations and interaction. If you have a small number of pages (3-4) that you can keep active all at once, less time will be spent in layout for newly created view subtrees as the user pages back and forth.&lt;p&gt; &lt;p&gt;You should keep this limit low, especially if your pages have complex layouts. By default it is set to {@code OFFSCREEN_PAGE_LIMIT_DEFAULT}.&lt;p&gt; @param limit How many pages will be kept offscreen on either side. Valid values are all values {@code &gt;= 1} and {@link OFFSCREEN_PAGE_LIMIT_DEFAULT} @throws IllegalArgumentException If the given limit is invalid" />
      <item value="' ~ Channel is unrecoverably broken and will be disposed!" />
      <item value="label" />
      <item value="labe" />
      <item value="Appearance" />
      <item value="edit" />
      <item value="collect" />
      <item value="取消" />
      <item value="uncollect" />
      <item value="pausing or ducking depends on your app" />
      <item value="Returns the same Intent object, for chaining multiple calls into a single statement." />
      <item value="Returns the minimum number of bytes that can be used to store this bitmap's pixels." />
      <item value="Returns the size of the allocated memory used to store this bitmap's pixels." />
      <item value="Not supplying enough data to HAL, expected position 34116677 , only wrote 33978705" />
      <item value="null cannot be cast to non-null type" />
      <item value="Key com.yalantis.ucrop.AspectRatioX expected Float but value was a java.lang.Integer. The default value 0.0 was returned." />
      <item value="Start of user-defined activity results" />
      <item value="ALTERNATIVE" />
      <item value="This has been removed in favor of &lt;code&gt;getParentFragmentManager()&lt;code&gt; which throws an {@link IllegalStateException} if the FragmentManager is null. Check if {@link isAdded()} returns &lt;code&gt;false&lt;code&gt; to determine if the FragmentManager is &lt;code&gt;null&lt;code&gt;." />
      <item value="If this Fragment is a child of another Fragment, the FragmentManager returned here will be the parent's" />
      <item value="Return the FragmentManager for interacting with fragments associated with this fragment's activity. Note that this will be non-null slightly before {@link getActivity()}, during the time from when the fragment is placed in a {@link FragmentTransaction} until it is committed and attached to its activity." />
      <item value="IllegalStateException if not associated with a transaction or host" />
      <item value="Visit" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1140" />
        <entry key="ENGLISH" value="1141" />
        <entry key="ESTONIAN" value="1" />
        <entry key="ICELANDIC" value="1" />
        <entry key="GERMAN" value="2" />
        <entry key="RUSSIAN" value="1" />
        <entry key="FRENCH" value="8" />
        <entry key="LATIN" value="1" />
        <entry key="LITHUANIAN" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="BENGALI" value="4" />
        <entry key="PORTUGUESE" value="2" />
        <entry key="SWEDISH" value="1" />
        <entry key="SPANISH" value="2" />
        <entry key="ITALIAN" value="2" />
        <entry key="INDONESIAN" value="1" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1616985484836" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20210205000691178" />
      </app-key>
    </option>
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
    <option name="translator" value="BAIDU" />
  </component>
</application>