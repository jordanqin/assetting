<application>
  <component name="AppStorage">
    <histories>
      <item value="Attempts to cancel execution of this task. This attempt will * fail if the task has already completed, has already been cancelled, * or could not be cancelled for some other reason. If successful, * and this task has not started when {@code cancel} is called, * this task should never run. If the task has already started, * then the {@code mayInterruptIfRunning} parameter determines * whether the thread executing this task should be interrupted in * an attempt to stop the task. * * &lt;p&gt;After this method returns, subsequent calls to {@link #isDone} will * always return {@code true}. Subsequent calls to {@link #isCancelled} * will always return {@code true} if this method returned {@code true}." />
      <item value="identifier" />
      <item value="COMMAND" />
      <item value="Cancels the task of loading and displaying image for incoming &lt;b&gt;imageAware&lt;/b&gt;." />
      <item value="Changes the priority of this thread. * &lt;p&gt; * First the &lt;code&gt;checkAccess&lt;/code&gt; method of this thread is called * with no arguments. This may result in throwing a * &lt;code&gt;SecurityException&lt;/code&gt;. * &lt;p&gt; * Otherwise, the priority of this thread is set to the smaller of * the specified &lt;code&gt;newPriority&lt;/code&gt; and the maximum permitted * priority of the thread's thread group." />
      <item value="priority" />
      <item value="snapshot" />
      <item value="Only the original thread that created a view hierarchy can touch its views." />
      <item value="parallel" />
      <item value="Round" />
      <item value="Is called when image loading task was cancelled because View for image was reused in newer task" />
      <item value="Is called when image is loaded successfully (and displayed in View if one was specified)" />
      <item value="View for image" />
      <item value="Loading" />
      <item value="WEIGHT" />
      <item value="Addition" />
      <item value="Weight" />
      <item value="Priority" />
      <item value="Presigned" />
      <item value="Builder" />
      <item value="Client configuration options such as timeout settings, protocol string, max * retry attempts, etc" />
      <item value="An interface representing a data checksum." />
      <item value="Compression" />
      <item value="Parquet" />
      <item value="Describes how a CSV-formatted input object is formatted" />
      <item value="Operations" />
      <item value="Source" />
      <item value="authorization" />
      <item value="Credentials" />
      <item value="STS" />
      <item value="Scope" />
      <item value="Sign the given request with the given set of credentials. Modifies the * passed-in request to apply the signature" />
      <item value="Credential" />
      <item value="Provider" />
      <item value="Session" />
      <item value="QCloudCredentials which the caller can use to authorize an QCloud * request" />
      <item value="Lifecycle" />
      <item value="passed-in" />
      <item value="Raw" />
      <item value="The credentials to sign the request with." />
      <item value="The request to sign." />
      <item value="Sign the given request with the given set of credentials. Modifies the * passed-in request to apply the signature." />
      <item value="Forces this credentials provider to refresh its credentials. For many * implementations of credentials provider, this method may simply be a * no-op, such as any credentials provider implementation that vends * static/non-changing credentials. For other implementations that vend * different credentials through out their lifetime, this method should * force the credentials provider to refresh its credentials." />
      <item value="Auth" />
      <item value="scope" />
      <item value="eventstreaming" />
      <item value="accelerate" />
      <item value="internal" />
      <item value="new state for operating" />
      <item value="Metrics" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="166" />
        <entry key="ENGLISH" value="167" />
        <entry key="FRENCH" value="6" />
        <entry key="LATIN" value="1" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
</application>