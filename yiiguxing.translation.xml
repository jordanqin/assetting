<application>
  <component name="AppStorage">
    <option name="newTranslationDialogX" value="-1492" />
    <option name="newTranslationDialogY" value="129" />
    <histories>
      <item value="Compressioned" />
      <item value="Sample" />
      <item value="This method calculates maximum size of both width and height of bitmap. It is twice the device screen diagonal for default implementation (extra quality to zoom image). Size cannot exceed max texture size." />
      <item value="Returns the number of historical points in this event. These are movements that have occurred between this event and the previous event. This only applies to ACTION_MOVE events -- all other actions will have a size of 0." />
      <item value="Which historical value to return; must be less than" />
      <item value="for the first pointer index (may be an arbitrary pointer identifier)." />
      <item value="放弃" />
      <item value="Historical" />
      <item value="Precision" />
      <item value="This method calculates scale value for given Matrix object" />
      <item value="This method sets multiplier that is used to calculate max image scale from min image scale." />
      <item value="Sets whether vector drawables on older platforms (&lt; API 21) can be used within" />
      <item value="Flag indicating that this Window is responsible for drawing the background for the system bars. If set, the system bars are drawn with a transparent background and the corresponding areas in this window are filled with the colors specified in {@link WindowgetStatusBarColor()} and {@link WindowgetNavigationBarColor()}." />
      <item value="Laid Out" />
      <item value="When image is laid out {@link mInitialImageCenter} and {@link mInitialImageCenter} must be set." />
      <item value="Set the type of zoom animation to be used for double taps. See static fields." />
      <item value="Set the scale the image will zoom in to when double tapped. This also the scale point where a double tap is interpreted as a zoom out gesture - if the scale is greater than 90% of this value, a double tap zooms out. Avoid using values greater than the max zoom." />
      <item value="average" />
      <item value="Enable or disable tiling of the image. This does not apply to preview images which are always loaded as a single bitmap, and tiling cannot be disabled when displaying a region of the source image." />
      <item value="Invariants" />
      <item value="Declare the dimensions of the image. This is only required for a full size image, when you are specifying a URI and also a preview image. When displaying a bitmap object, or not using a preview, you do not need to declare the image dimensions. Note if the declared dimensions are found to be incorrect, the view will reset." />
      <item value="Set the pan limiting style. See static fields. Normally {@link PAN_LIMIT_INSIDE} is best, for image galleries." />
      <item value="Density to reach before loading higher resolution tiles" />
      <item value="overrides for the dimensions of the generated tiles" />
      <item value="Tile" />
      <item value="We want the actual sample size that will be used, so round down to nearest power of 2." />
      <item value="Ratio" />
      <item value="Calculates sample size to fit the source image in given bounds." />
      <item value="Set a global preferred bitmap config shared by all view instances and applied to new instances initialised after the call is made. This is a hint only; the bundled {@link ImageDecoder} and {@link ImageRegionDecoder} classes all respect this (except when they were constructed with an instance-specific config) but custom decoder classes will not." />
      <item value="A global preference for bitmap format, available to decoder classes that respect it" />
      <item value="By default the View automatically calculates the optimal tile size. Set this to override this, and force an upper limit to the dimensions of the generated tiles. Passing {@link TILE_SIZE_AUTO} will re-enable the default behaviour." />
      <item value="When using tiles, on first render with no tile map ready, initialise it and kick off async base image loading." />
      <item value="Sample size used to display the whole image when fully zoomed out" />
      <item value="Uri of full size image" />
      <item value="Whether the bitmap is a preview image" />
      <item value="Eager" />
      <item value="intrinsic" />
      <item value="Inset" />
      <item value="Returns the bottom system window inset in pixels." />
      <item value="container" />
      <item value="容器" />
      <item value="Returns true iff obj is a Matrix and its values equal our values." />
      <item value="This method updates current image corners and center points that are stored in {@link mCurrentImageCorners} and {@link mCurrentImageCenter} arrays." />
      <item value="is Init" />
      <item value="Init" />
      <item value="Initial" />
      <item value="This method calculates initial image position so it is positioned properly. Then it sets those values to the current image matrix." />
      <item value="Affine" />
      <item value="matrix Is Change" />
      <item value="MTRANS" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1228" />
        <entry key="ENGLISH" value="1229" />
        <entry key="ESTONIAN" value="1" />
        <entry key="ICELANDIC" value="1" />
        <entry key="GERMAN" value="2" />
        <entry key="RUSSIAN" value="1" />
        <entry key="FRENCH" value="8" />
        <entry key="LATIN" value="1" />
        <entry key="LITHUANIAN" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="BENGALI" value="4" />
        <entry key="PORTUGUESE" value="2" />
        <entry key="SWEDISH" value="1" />
        <entry key="SPANISH" value="2" />
        <entry key="ITALIAN" value="2" />
        <entry key="INDONESIAN" value="1" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1620283074791" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20210205000691178" />
      </app-key>
    </option>
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
    <option name="translator" value="BAIDU" />
  </component>
</application>