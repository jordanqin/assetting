<application>
  <component name="AppStorage">
    <histories>
      <item value="bintray" />
      <item value="Sync" />
      <item value="同步" />
      <item value="Param" />
      <item value="默认" />
      <item value="No Zoom" />
      <item value="不" />
      <item value="Non" />
      <item value="轮廓" />
      <item value="侧面" />
      <item value="宽高" />
      <item value="Full" />
      <item value="以" />
      <item value="以什么为准" />
      <item value="缩放" />
      <item value="MILLISECONDS" />
      <item value="耗时" />
      <item value="The specific model that was used to load the image." />
      <item value="LibraryGlideModules are called in no defined order. If LibraryGlideModules within an * application conflict, {@link AppGlideModule}s can use the {@link * com.bumptech.glide.annotation.Excludes} annotation to selectively remove one or more of the * conflicting modules." />
      <item value="Any number of LibraryGlideModules can be contained within any library or application." />
      <item value="Registers a set of components to use when initializing Glide within an app when Glide's * annotation processor is used." />
      <item value="Alternate" />
      <item value="The primary reason this object is exposed is for use in custom {@link * com.bumptech.glide.load.ResourceDecoder}s and {@link com.bumptech.glide.load.Transformation}s. * Use outside of these classes is not generally recommended" />
      <item value="To make effective use of the pool, any {@link android.graphics.Bitmap} removed from * the pool must eventually be re-added. Otherwise the pool will eventually empty and will not * serve any useful purpose." />
      <item value="Using this pool directly can lead to undefined behavior and strange drawing errors. * Any {@link android.graphics.Bitmap} added to the pool must not be currently in use in any other * part of the application. Any {@link android.graphics.Bitmap} added to the pool must be removed * from the pool before it is added a second time." />
      <item value="Returns the {@link com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool} used to * temporarily store {@link android.graphics.Bitmap}s so they can be reused to avoid garbage * collections." />
      <item value="A map of string keys to objects that may or may not contain options available to * this particular implementation. Implementations should not assume that any or all of their * option keys are present. However, implementations may assume that if one of their option * keys is present, it's value is non-null and is of the expected type." />
      <item value="The {@code width} and {@code height} arguments are hints only, there is no * requirement that the decoded resource exactly match the given dimensions. A typical use case * would be to use the target dimensions to determine how much to downsample Bitmaps by to avoid * overly large allocations." />
      <item value="The {@code source} is managed by the caller, there's no need to close it. The returned * {@link Resource} will be {@link Resource#recycle() released} when the engine sees fit." />
      <item value="Returns a decoded resource from the given data or null if no resource could be decoded." />
      <item value="Note that while some implementations of {@code InputStream} will return * the total number of bytes in the stream, many will not. It is * never correct to use the return value of this method to allocate * a buffer intended to hold all data in this stream." />
      <item value="Returns an estimate of the number of bytes that can be read (or * skipped over) from this input stream without blocking by the next * invocation of a method for this input stream. The next invocation * might be the same thread or another thread. A single read or skip of this * many bytes will not block, but may read or skip fewer bytes." />
      <item value="Decoders should make a best effort attempt to quickly determine if they are likely to be * able to decode data, but should not attempt to completely read the given data. A typical * implementation would check the file headers verify they match content the decoder expects to * handle (i.e. a GIF decoder should verify that the image contains the GIF header block." />
      <item value="Returns {@code true} if this decoder is capable of decoding the given source with the given * options, and {@code false} otherwise." />
      <item value="Note - The {@code width} and {@code height} arguments are hints only, there is no * requirement that the decoded resource exactly match the given dimensions. A typical use case * would be to use the target dimensions to determine how much to downsample Bitmaps by to avoid * overly large allocations." />
      <item value="Interface for an array pool that pools arrays of different types." />
      <item value="The type the resource will be decoded from (File, InputStream etc)." />
      <item value="Downsamples, decodes, and rotates images according to their exif orientation using {@link * BitmapFactory}." />
      <item value="Bean" />
      <item value="original" />
      <item value="原始" />
      <item value="Denotes that a parameter, field or method return value can be null. * &lt;p&gt; * When decorating a method call parameter, this denotes that the parameter can * legitimately be null and the method will gracefully deal with it. Typically * used on optional parameters. * &lt;p&gt; * When decorating a method, this denotes the method might legitimately return * null." />
      <item value="Denotes that the annotated method returns a result that it typically is * an error to ignore. This is usually used for methods that have no side effect, * so calling it without actually looking at the result usually means the developer * has misunderstood what the method does." />
      <item value="Weak" />
      <item value="Malformed" />
      <item value="项目" />
      <item value="byte array decode failure" />
      <item value="Failure" />
      <item value="From" />
      <item value="With" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="235" />
        <entry key="ENGLISH" value="235" />
        <entry key="FRENCH" value="6" />
        <entry key="LATIN" value="1" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="ITALIAN" value="2" />
        <entry key="INDONESIAN" value="1" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
</application>