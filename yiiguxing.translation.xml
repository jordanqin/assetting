<application>
  <component name="AppStorage">
    <histories>
      <item value="Returns a valid url http:// or https:// for the given model and dimensions as a string." />
      <item value="You can't start or clear loads in RequestListener or Target callbacks. If you're trying to start a fallback request when a load fails, use RequestBuilder#error(RequestBuilder). Otherwise consider posting your into() or clear() calls to the main thread using a Handler instead." />
      <item value="disable" />
      <item value="build" />
      <item value="Returns a list of alternate urls for the given model, width, and height from which equivalent * data can be obtained (usually the same image with the same aspect ratio, but in a larger size) * as the primary url." />
      <item value="Fetcher" />
      <item value="alternate" />
      <item value="DESC" />
      <item value="useless" />
      <item value="Erasable" />
      <item value="console" />
      <item value="forever" />
      <item value="abandon" />
      <item value="expand" />
      <item value="direction" />
      <item value="FOREVERKEY" />
      <item value="Presigned" />
      <item value="signing" />
      <item value="KEYSTORE" />
      <item value="import" />
      <item value="集成" />
      <item value="Animated" />
      <item value="SECONDS" />
      <item value="Transcoder" />
      <item value="GIF Disposal Method meaning clear canvas to frame before last. * &lt;p&gt;&lt;b&gt;GIF89a&lt;/b&gt;: &lt;i&gt;Restore to previous. * The decoder is required to restore the area overwritten by the graphic * with what was there prior to rendering the graphic.&lt;/i&gt;&lt;/p&gt;" />
      <item value="previous" />
      <item value="百分比" />
      <item value="Quality" />
      <item value="format" />
      <item value="consume" />
      <item value="Responsive" />
      <item value="Tries to intelligently choose a strategy based on the data source of the {@link * com.bumptech.glide.load.data.DataFetcher} and the {@link * com.bumptech.glide.load.EncodeStrategy} of the {@link com.bumptech.glide.load.ResourceEncoder} * (if an {@link com.bumptech.glide.load.ResourceEncoder} is available)" />
      <item value="Writes resources to disk after they've been decoded" />
      <item value="Writes retrieved data directly to the disk cache before it's decoded" />
      <item value="Saves no data to cache." />
      <item value="Caches remote data with both {@link #DATA} and {@link #RESOURCE}, and local data with {@link * #RESOURCE} only." />
      <item value="original" />
      <item value="Called getWidth() on a recycle()'d bitmap! This is undefined behavior!" />
      <item value="limit" />
      <item value="Gets the Object mapped from the specified key, or &lt;code&gt;null&lt;/code&gt; * if no such mapping has been made." />
      <item value="is Recycled" />
      <item value="Cannot pool recycled bitmap" />
      <item value="remaining" />
      <item value="More than one file was found with OS independent path 'lib/x86/libTPGDecoder.so'. If you are using jniLibs and CMake IMPORTED targets," />
      <item value="Reads 16k chunks from the native buffer for processing, to greatly reduce JNI overhead." />
      <item value="Temporary buffer for block reading." />
      <item value="Reads next variable length block from input. * * @return number of bytes stored in &quot;buffer&quot;." />
      <item value="Reads the next chunk for the intermediate work buffer." />
      <item value="LZW decoder working arrays." />
      <item value="Temporary buffer for block reading. * Reads 16k chunks from the native buffer for processing, to greatly reduce JNI overhead." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="437" />
        <entry key="ENGLISH" value="438" />
        <entry key="ESTONIAN" value="1" />
        <entry key="ICELANDIC" value="1" />
        <entry key="RUSSIAN" value="1" />
        <entry key="FRENCH" value="6" />
        <entry key="LATIN" value="1" />
        <entry key="LITHUANIAN" value="1" />
        <entry key="PORTUGUESE" value="2" />
        <entry key="SWEDISH" value="1" />
        <entry key="ITALIAN" value="2" />
        <entry key="INDONESIAN" value="1" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
</application>